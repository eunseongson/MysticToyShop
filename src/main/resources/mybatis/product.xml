<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Product">
    <insert id="product_write" parameterType="lotte.com.toy.dto.ProductDto">
        insert into products(product_name, product_info, product_img, product_cost, product_stock, product_sell_count,
                             category_id, seller_id)

        values (#{product_name}, #{product_info}, #{product_img}, #{product_cost}, #{product_stock},
                #{product_sell_count}, #{category_id}, #{seller_id});
    </insert>
    <select id="findByProductId" parameterType="Integer" resultType="lotte.com.toy.dto.ProductDto">
        select product_id,
               product_name,
               product_info,
               product_img,
               product_cost,
               product_stock,
               product_sell_count,
               category_id,
               seller_id
        from products
        where product_id = #{product_id}
    </select>
    <select id="getProductList" resultType="lotte.com.toy.dto.ProductResponseDto">
        select p.product_id,
               p.product_name,
               p.product_info,
               p.product_img,
               p.product_cost,
               p.product_stock,
               p.product_sell_count,
               p.category_id,
               c.category_name,
               p.seller_id,
               s.seller_company_name,
               s.seller_company_number,
               s.seller_email,
               s.seller_address
        from products p,
             categories c,
             sellers s
        where p.category_id = c.category_id
          and p.seller_id = s.seller_id
    </select>
    <select id="getProductListByCategoryId" parameterType="Integer" resultType="lotte.com.toy.dto.ProductResponseDto">
        select p.product_id,
               p.product_name,
               p.product_info,
               p.product_img,
               p.product_cost,
               p.product_stock,
               p.product_sell_count,
               p.category_id,
               c.category_name,
               p.seller_id,
               s.seller_company_name,
               s.seller_company_number,
               s.seller_email,
               s.seller_address
        from products p,
             categories c,
             sellers s
        where p.category_id = c.category_id
          and p.seller_id = s.seller_id
          and p.category_id = #{category_id}
    </select>
    <select id="getProductByProductId" parameterType="Integer" resultType="lotte.com.toy.dto.ProductResponseDto">
        select p.product_id,
               p.product_name,
               p.product_info,
               p.product_img,
               p.product_cost,
               p.product_stock,
               p.product_sell_count,
               p.category_id,
               c.category_name,
               p.seller_id,
               s.seller_company_name,
               s.seller_company_number,
               s.seller_email,
               s.seller_address
        from products p,
             categories c,
             sellers s
        where p.category_id = c.category_id
          and p.seller_id = s.seller_id
          and product_id = #{product_id}
    </select>
    <select id="findByProductName" parameterType="String" resultType="lotte.com.toy.dto.ProductResponseDto">
        select *
        from products
        where product_name like CONCAT("%", #{product_name}, "%")
    </select>
    <update id="updateProductStock" parameterType="Integer">
        update products
        set product_stock = product_stock - 1
        where product_id = #{product_id};
    </update>
    <update id="updateProductSellCount" parameterType="Integer">
        update products
        set product_sell_count = product_sell_count + 1
        where product_id = #{product_id};
    </update>
    <select id="getProductListForMain" resultType="lotte.com.toy.dto.ProductResponseDto">
        select p.product_id,
               p.product_name,
               p.product_info,
               p.product_img,
               p.product_cost,
               p.product_stock,
               p.product_sell_count,
               p.category_id,
               c.category_name
        from products p,
             categories c
        where p.category_id = c.category_id
        order by product_sell_count desc limit 10
    </select>

    <update id="product_update" parameterType="lotte.com.toy.dto.ProductDto">
        update products
        set product_name = #{product_name},
            product_info = #{product_info},
            product_img = #{product_img},
            product_cost = #{product_cost},
            product_stock = #{product_stock},
            category_id = #{category_id}
            where product_id = #{product_id};
    </update>
</mapper>